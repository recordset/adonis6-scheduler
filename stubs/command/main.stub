{{#var taskName = string(entity.name).removeSuffix('task').suffix('Task').pascalCase().toString()}}
{{#var taskFileName = string(entity.name).removeSuffix('task').suffix('Task').snakeCase().removeExtension().ext('.ts').toString()}}
{{{
  exports({ to: app.makePath(tasksPath, entity.path, taskFileName) })
}}}

import { BaseTask, CronTimeV2 } from '@recordset/adonis6-scheduler/task'
import logger from '@adonisjs/core/services/logger'

export default class {{ taskName }} extends BaseTask {
    public static get schedule() {
        // Use CronTimeV2 generator:
        return CronTimeV2.everySecond()
        // or just use return cron-style string (simple cron editor: crontab.guru)
    }

    /**
    * Set enable use .lock file for block run retry task
    * Lock file save to "build/tmp/adonis5-scheduler/locks/your-class-name"
    */
    public static get useLock() {
        return false
    }

    public async handle() {
        logger.info('Handled {{ taskName }}')
        // Remove this promise and insert your code:
        await new Promise((res) => setTimeout(res, 2000))
    }
}
